name: build
on:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        python-version: ['3.9']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Read Version file
        id: get-version
        run: echo "::set-output name=version::$(cat VERSION)"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install modules
        run: |
          python3 -m pip install pipenv wheel

      - name: Install pygandi
        run: |
          python3 setup.py bdist_wheel

      - name: Test pygandi
        run: |
          pipenv install --dev
          pipenv run PYTHONPATH=./src pytest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: |
            NGINX_PORT=5000
            HUGO_ENV=production
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{needs.lint.outputs.version}}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Inspect
        run: |
          docker image inspect ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{needs.lint.outputs.version}}

  # docker:
  #   runs-on: ubuntu-latest
  #   needs: lint
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3
  #     with:
  #       submodules: true
  #       fetch-depth: 0

