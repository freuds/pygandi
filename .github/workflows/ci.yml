name: docker
on:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - main

env:
  IMAGE_NAME: pygandi

jobs:
  linter:
    strategy:
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv pip install -e ".[test]"

      - name: Run tests
        run: |
          make tests
      - name: Build package
        run: |
          uv pip install build
          python3 -m build

  build_and_push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Get Version
      id: get-version
      run: |
        echo "version=$(python3 -c 'from version import __version__; print(__version__)')" >> $GITHUB_OUTPUT

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Validate build configuration
      uses: docker/build-push-action@v6
      with:
        call: check
        build-args: |
          VERSION=${{ steps.get-version.outputs.version }}

    - name: Build and push
      id: docker-build
      uses: docker/build-push-action@v6
      with:
        push: true
        build-args: |
          VERSION=${{ steps.get-version.outputs.version}}
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.get-version.outputs.version }}
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

    - name: Image digest
      run: echo ${{ steps.docker-build.outputs.digest }}
