[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pygandi"
dynamic = ["version"]
description = "Commandline DNS management utility for Gandi"
readme = "README.md"
authors = [
    { name = "Fred", email = "fred@freuds.fr" }
]
requires-python = ">=3.9,<3.13"
dependencies = [
    "hatchling>=1.21.0",
    "importlib-metadata>=6.0.0; python_version < '3.10'"
]
keywords = ["cli", "gandi", "dns", "utility"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]

[project.urls]
"Bug Tracker" = "https://github.com/freuds/pygandi/issues"
"Source Code" = "https://github.com/freuds/pygandi"

[project.scripts]
pygandi = "pygandi.cli:main"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-mock>=3.0.0",
    "pytest-cov>=4.1.0",
    "coverage>=7.4.0",
    "pylint>=3.0.0",
    "black>=24.1.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
]

[tool.hatch.version]
pattern = "(?P<version>\\d+\\.\\d+\\.\\d+)"
path = "version.py"
regex = true

[tool.hatch.build.targets.wheel]
packages = ["src/pygandi"]

[tool.pytest.ini_options]
pythonpath = ["src"]
addopts = "-v --cov=src/pygandi --cov-report=term-missing"
testpaths = ["tests"]

[tool.coverage.run]
source = ["src/pygandi"]
branch = true
parallel = true

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/tests/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pylint]
max-line-length = 100
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
]

[tool.pylint.tests]
# Disable protected-access warning for tests
disable = ["W0212"]  # protected-access

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true